openapi: 3.0.0
info:
  title: tempCodi-main
  contact: {}
  version: '1.0'
servers:
  - url: 'https://tempcodi-backend.onrender.com/api'
    variables: {}
paths:
  /geolocation:
    post:
      tags:
        - Misc
      summary: geolocation
      operationId: geolocation
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/geolocationrequest'
                - example:
                    lon: '139.818482'
                    lat: '35.618791'
            example:
              lon: '139.818482'
              lat: '35.618791'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
        - url: 'https://tempcodi-backend.onrender.com/api'
          variables: {}
  /googleImg:
    post:
      tags:
        - Misc
      summary: googleImg
      operationId: googleImg
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/googleImgRequest'
                - example:
                    keyword: stupid
                    pageNo: 2
                    gender: male
            example:
              keyword: stupid
              pageNo: 2
              gender: male
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
        - url: 'https://tempcodi-backend.onrender.com/api'
          variables: {}
components:
  schemas:
    geolocationrequest:
      title: geolocationrequest
      required:
        - lon
        - lat
      type: object
      properties:
        lon:
          type: string
        lat:
          type: string
      example:
        lon: '139.818482'
        lat: '35.618791'
    googleImgRequest:
      title: googleImgRequest
      required:
        - keyword
        - pageNo
        - gender
      type: object
      properties:
        keyword:
          type: string
        pageNo:
          type: integer
          format: int32
        gender:
          type: string
      example:
        keyword: stupid
        pageNo: 2
        gender: male
tags:
  - name: Misc
    description: ''
